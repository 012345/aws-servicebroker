AWSTemplateFormatVersion: 2010-09-09
Description: AWS Servicebroker - Amazon SQS (qs-1nt0fs93h)
Metadata:
  'AWS::ServiceBroker::Specification':
    Version: 1.0
    Tags:
      - AWS
      - SQS
      - message queing
    Name: sqs
    DisplayName: "Amazon SQS"
    LongDescription: >-
      Amazon Simple Queue Service (Amazon SQS) is a fully managed message queuing
      service that makes it easy to decouple and scale microservices, distributed
      systems, and serverless applications. Amazon SQS moves data between distributed
      application components and helps you decouple these components."
    ImageUrl: "https://s3.amazonaws.com/thp-aws-icons-dev/Messaging_AmazonSQS_LARGE.png"
    DocumentationUrl: 'https://aws.amazon.com/documentation/sqs/'
    ProviderDisplayName: "Amazon Web Services"
    Bindings:
      IAM:
        AddKeypair: True
        Policies:
          - PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Action:
                  - 'sqs:ChangeMessageVisibility'
                  - 'sqs:ChangeMessageVisibilityBatch'
                  - 'sqs:DeleteMessage'
                  - 'sqs:DeleteMessageBatch'
                  - 'sqs:ReceiveMessage'
                  - 'sqs:PurgeQueue'
                  - 'sqs:SendMessage'
                  - 'sqs:SendMessageBatch'
                  Effect: Allow
                  Resource: !GetAtt SQSQueue.Arn
      CFNOutputs: [SQSQueueUrl, SQSQueueArn, SQSQueueName, SQSDeadLetterQueueUrl, SQSDeadLetterQueueArn]
    ServicePlans:
        standard:
          DisplayName: "Standard"
          Description: 'SQS Queue (Standard)'
          LongDescription: "Managed Standard SQS Queue"
          Cost: "https://aws.amazon.com/sqs/pricing/"
          ParameterValues:
            FifoQueue: "false"
            ContentBasedDeduplication: "false"
        fifo:
          DisplayName: "FIFO"
          Description: 'SQS Queue (FIFO)'
          LongDescription: "Managed FIFO SQS Queue"
          Cost: "https://aws.amazon.com/sqs/pricing/"
          ParameterValues:
            FifoQueue: "true"
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: "SQS Configuration"
        Parameters:
          - DelaySeconds
          - MaximumMessageSize
          - MessageRetentionPeriod
          - ReceiveMessageWaitTimeSeconds
          - UsedeadletterQueue
          - VisibilityTimeout
          - FifoQueue
          - ContentBasedDeduplication
    ParameterLabels:
      DelaySeconds: { default: "Delay Seconds" }
      MaximumMessageSize: { default: "Maximum Message Size" }
      MessageRetentionPeriod: { default: "Message Retention Period" }
      ReceiveMessageWaitTimeSeconds: { default: "Receive Message Wait Time Seconds" }
      UsedeadletterQueue: { default: "Use Dead Letter Queue" }
      VisibilityTimeout: { default: "Visibility Timeout" }
      FifoQueue: { default: "Fifo Queue" }
      ContentBasedDeduplication: { default: "Content Based Deduplication" }
Parameters:
  ContentBasedDeduplication:
    Description: specifies whether to enable content-based deduplication, only applies to FIFO queues
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
  DelaySeconds:
    Description: The Id of the AMI you wish to launch the instance from.
    Type: Number
    Default: '5'
  MaximumMessageSize:
    Type: Number
    Description: >-
      The limit of how many bytes that a message can contain before Amazon SQS
      rejects it, 1024 bytes (1 KiB) to 262144 bytes (256 KiB)
    Default: '262144'
  MessageRetentionPeriod:
    Description: >-
      The number of seconds that Amazon SQS retains a message. You can specify
      an integer value from 60 seconds (1 minute) to 1209600 seconds (14 days).
    Type: Number
    Default: '345600'
  ReceiveMessageWaitTimeSeconds:
    Description: >-
      Specifies the duration, in seconds, that the ReceiveMessage action call
      waits until a message is in the queue in order to include it in the
      response, as opposed to returning an empty response if a message is not
      yet available. 1 to 20
    Type: Number
    Default: '0'
  UsedeadletterQueue:
    Description: >-
      A dead-letter queue is a queue that other (source) queues can target for
      messages that can't be processed (consumed) successfully. You can set
      aside and isolate these messages in the dead-letter queue to determine why
      their processing doesn't succeed.
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
  VisibilityTimeout:
    Description: >-
      This should be longer than the time it would take to process and delete a
      message, this should not exceed 12 hours.
    Type: Number
    Default: '5'
  FifoQueue:
    Description: If true queue will be FIFO
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
Conditions:
  CreateDeadLetterQueue: !Equals
    - !Ref UsedeadletterQueue
    - 'true'
  IsFifo: !Equals
    - !Ref FifoQueue
    - 'true'
Resources:
  SQSQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      ContentBasedDeduplication: !If
        - IsFifo
        - !Ref ContentBasedDeduplication
        - !Ref AWS::NoValue
      FifoQueue: !If
        - IsFifo
        - true
        - !Ref AWS::NoValue
      MaximumMessageSize: !Ref MaximumMessageSize
      MessageRetentionPeriod: !Ref MessageRetentionPeriod
      ReceiveMessageWaitTimeSeconds: !Ref ReceiveMessageWaitTimeSeconds
      RedrivePolicy: !If
        - CreateDeadLetterQueue
        - deadLetterTargetArn: !GetAtt
            - MyDeadLetterQueue
            - Arn
          maxReceiveCount: 5
        - !Ref 'AWS::NoValue'
      VisibilityTimeout: !Ref VisibilityTimeout
  MyDeadLetterQueue:
    Condition: CreateDeadLetterQueue
    Type: 'AWS::SQS::Queue'
    Properties:
      FifoQueue: !Ref FifoQueue
Outputs:
  QueueURL:
    Description: URL of newly created SQS Queue
    Value: !Ref SQSQueue
  QueueARN:
    Description: ARN of newly created SQS Queue
    Value: !GetAtt
      - SQSQueue
      - Arn
  QueueName:
    Description: Name newly created SQS Queue
    Value: !GetAtt
      - SQSQueue
      - QueueName
