AWSTemplateFormatVersion: 2010-09-09
Description: Best Practice SQS Standard Queue. qs-1nt0fs93h
Metadata:
  'AWS::ServiceBroker::Specification':
    ### OPTIONAL. At present the only supported APB spec version is 1.0
    Version: 1.0
    # OPTIONAL. A list of descriptive tags for the service catalog to associate with the service
    Tags:
      - AWS
      - SQS
      - message queing
    # Name to be used for docker image tag
    Name: sqs-apb
    # Name displayed by the Service Catalog ui
    DisplayName: "Amazon SQS (APB)"
    # Description displayed by the Service Catalog ui
    LongDescription: "Amazon Simple Queue Service (Amazon SQS) is a fully managed message queuing service that makes it easy to decouple and scale microservices, distributed systems, and serverless applications. Amazon SQS moves data between distributed application components and helps you decouple these components."
    # url to icon displayed by the Service Catalog ui
    ImageUrl: "https://s3.amazonaws.com/thp-aws-icons-dev/Messaging_AmazonSQS_LARGE.png"
    # url to service documentation displayed by the Service Catalog ui
    DocumentationUrl: 'https://aws.amazon.com/documentation/sqs/'
    # OPTIONAL. Provider Name displayed by the Service Catalog ui
    ProviderDisplayName: "Amazon Web Services"
    Bindings:
      ### OPTIONAL. This section is used to configure the bind operation for the service.
      ### By default all Outputs in the template will automatically be added, this behaviour can be changed with:
      ### CFNOutputs: [] - Disables all outputs from being added to bind
      ### CFNOutputs: [OutputName1, OutputName2] - enables only the outputs listed
      ###
      ### If the application requires AWS credentials to consume the service these can be generated by using:
      ### Policies is a list of either:
      ###   - IAM PolicyDocument in either yaml or json
      ###   - arn for a managed or pre-created policy
      IAM:
        AddKeypair: True
        Policies:
          - PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Action:
                  - 'sqs:ChangeMessageVisibility'
                  - 'sqs:ChangeMessageVisibilityBatch'
                  - 'sqs:DeleteMessage'
                  - 'sqs:DeleteMessageBatch'
                  - 'sqs:ReceiveMessage'
                  - 'sqs:PurgeQueue'
                  - 'sqs:SendMessage'
                  - 'sqs:SendMessageBatch'
                  Effect: Allow
                  Resource: !GetAtt SQSQueue.Arn
          - arn:aws:iam::aws:policy/AmazonSQSReadOnlyAccess
      ### Which template outputs should be made available as bindings
      CFNOutputs: [SQSQueueUrl, SQSQueueArn, SQSQueueName, SQSDeadLetterQueueUrl, SQSDeadLetterQueueArn]
    ServicePlans:
      ### OPTIONAL. This section defines service plans that the broker will expose
      ### If no plans are defined, then a default plan will be created, exposing all of the template parameters
      ###
      ### Utility Injection: Custom resources and associates conditions will be injected into the template if there are any parameters matching the following Key/Default values:
      ###     - Name: AvailabilityZones, Default: Auto # custom resource that gets the number of AZ's as specified by the NumberOfAvailabilityZones parameter
      ###     - Name: CidrBlocks, Default: Auto # custom resource that creates subnets based on the NumberOfAvailabilityZones and CidrSize parameters
        default:
          DisplayName: "Standard"
          Description: 'Managed SQS Queue (Standard)'
          LongDescription: "Standard SQS APB"
          Cost: "https://aws.amazon.com/sqs/pricing/"
          ### Use this to select cfn parameters that should NOT be offered for the plan and what their prescribed values should be, a value of "Default" will use the parameters default value
          ParameterValues:
            DelaySeconds: 10
            MaximumMessageSize: Default
            MessageRetentionPeriod: Default
            ReceiveMessageWaitTimeSeconds: Default
        custom:
          DisplayName: "Custom"
          Description: 'Managed SQS Queue (Custom)'
          LongDescription: "Custom SQS APB"
          Cost: "https://aws.amazon.com/sqs/pricing/"
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: "SQS Configuration"
        Parameters:
          - DelaySeconds
          - MaximumMessageSize
          - MessageRetentionPeriod
    ParameterLabels:
      DelaySeconds:
        default: "Delay Seconds"
Parameters:
  AvailabilityZones:
    Description: >-
      list of availability zones to use, must be the same quantity as specified
      in NumberOfAvailabilityZones
    Type: CommaDelimitedList
    Default: "Auto"
  CidrBlocks:
    Description: >-
      comma seperated list of CIDR blocks to place ElastiCache into, must be the
      same quantity as specified in NumberOfAvailabilityZones.
      If auto is specified unused cidr space in the vpc will be used
    Type: CommaDelimitedList
    Default: 'Auto'
  CidrSize:
    Description: >-
      Size of Cidr block to allocate if CidrBlocks is set to Auto.
    Type: String
    Default: '26'
  NumberOfAvailabilityZones:
    Description: >-
      Quantity of subnets to use, if selecting more than 2 the region this stack
      is in must have at least that many Availability Zones
    Type: String
    Default: 'Auto'
  VpcId:
    Description: The ID of the VPC to launch the Memcache cluster into
    Type: 'AWS::EC2::VPC::Id'
  DelaySeconds:
    Description: The time in seconds that the delivery of all messages in the queue is delayed.
    Type: Number
    Default: '5'
  MaximumMessageSize:
    Type: Number
    Description: >-
      The limit of how many bytes that a message can contain before Amazon SQS
      rejects it, 1024 bytes (1 KiB) to 262144 bytes (256 KiB)
    Default: '262144'
  MessageRetentionPeriod:
    Description: >-
      The number of seconds that Amazon SQS retains a message. You can specify
      an integer value from 60 seconds (1 minute) to 1209600 seconds (14 days).
    Type: Number
    Default: '345600'
  ReceiveMessageWaitTimeSeconds:
    Description: >-
      Specifies the duration, in seconds, that the ReceiveMessage action call
      waits until a message is in the queue in order to include it in the
      response, as opposed to returning an empty response if a message is not
      yet available. 1 to 20
    Type: Number
    Default: '0'
  UsedeadletterQueue:
    Description: >-
      A dead-letter queue is a queue that other (source) queues can target for
      messages that can't be processed (consumed) successfully. You can set
      aside and isolate these messages in the dead-letter queue to determine why
      their processing doesn't succeed.
    Type: String
    Default: ''
  VisibilityTimeout:
    Description: >-
      This should be longer than the time it would take to process and delete a
      message, this should not exceed 12 hours.
    Type: Number
    Default: '5'
Mappings: {}
Conditions:
  CreateDeadLetterQueue: !Equals
    - !Ref UsedeadletterQueue
    - 'true'
Resources:
  SQSQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      DelaySeconds: !Ref DelaySeconds
      MaximumMessageSize: !Ref MaximumMessageSize
      MessageRetentionPeriod: !Ref MessageRetentionPeriod
      ReceiveMessageWaitTimeSeconds: !Ref ReceiveMessageWaitTimeSeconds
      RedrivePolicy: !If
        - CreateDeadLetterQueue
        - deadLetterTargetArn: !GetAtt
            - MyDeadLetterQueue
            - Arn
          maxReceiveCount: 5
        - !Ref 'AWS::NoValue'
      VisibilityTimeout: !Ref VisibilityTimeout
  MyDeadLetterQueue:
    Condition: CreateDeadLetterQueue
    Type: 'AWS::SQS::Queue'
Outputs:
  SQSQueueUrl:
    Description: URL of newly created SQS Queue
    Value: !Ref SQSQueue
  SQSQueueArn:
    Description: ARN of newly created SQS Queue
    Value: !GetAtt SQSQueue.Arn
  SQSQueueName:
    Description: Name newly created SQS Queue
    Value: !GetAtt SQSQueue.QueueName
  SQSDeadLetterQueueUrl:
    Description: URL of the dead letter queue
    Value: !If [CreateDeadLetterQueue, !Ref MyDeadLetterQueue, ""]
  SQSDeadLetterQueueArn:
    Description: ARN of the dead letter queue
    Value: !If [CreateDeadLetterQueue, !GetAtt MyDeadLetterQueue.Arn, ""]
  TestAutoAz1:
    Description: 1stAz
    Value: !Select
      - 0
      - !Ref AvailabilityZones
  TestAutoCidr1:
    Description: 1stCidr
    Value:
      !Select
      - 0
      - !Ref CidrBlocks